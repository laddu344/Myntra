pipeline {
    agent any

    tools {
        nodejs "node23"      // Make sure NodeJS tool is configured in Jenkins
    }

    environment {
        DOCKER_HUB_USER = 'varaprasadrenati'       
        DOCKER_CREDENTIALS_ID = 'docker-creds'     
        IMAGE_NAME = 'myntra-node-app'             
        AWS_REGION = 'eu-north-1'                  
        EKS_CLUSTER = 'prasad-cluster'                      
    }

    stages {

        stage('Clone Code from GitHub') {
            steps {
                checkout([$class: 'GitSCM', 
                    branches: [[name: '*/main']], 
                    userRemoteConfigs: [[
                        url: 'https://github.com/laddu344/Myntra.git',
                        credentialsId: 'GITHUB_CREDENTIALS'
                    ]]
                ])
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def imageTag = "${DOCKER_HUB_USER}/${IMAGE_NAME}:${BUILD_NUMBER}"
                    sh "docker build -t ${imageTag} ."
                }
            }
        }

        stage('Push Image to DockerHub') {
            steps {
                script {
                    def imageTag = "${DOCKER_HUB_USER}/${IMAGE_NAME}:${BUILD_NUMBER}"
                    withCredentials([usernamePassword(
                        credentialsId: "${DOCKER_CREDENTIALS_ID}",
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS'
                    )]) {
                        sh "echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin"
                    }
                    sh "docker push ${imageTag}"
                }
            }
        }

        stage('Deploy to EKS Cluster') {
            steps {
                script {
                    // Use EC2 IAM role; no explicit AWS credentials
                    sh "aws eks update-kubeconfig --name ${EKS_CLUSTER} --region ${AWS_REGION}"

                    // Update deployment image dynamically
                    sh """
                        sed -i 's|image: .*|image: ${DOCKER_HUB_USER}/${IMAGE_NAME}:${BUILD_NUMBER}|' nodejsapp.yaml
                    """

                    // Apply Kubernetes deployment and service
                    sh "kubectl apply -f nodejsapp.yaml"

                    // Wait for deployment to be ready
                    sh "kubectl rollout status deployment/myntra-node-app-deployment"

                    // Fetch LoadBalancer URL
                    sh """
                        APP_URL=\$(kubectl get svc myntra-node-app-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
                        echo 'Your application is live at: http://\$APP_URL'
                    """
                }
            }
        }
    }

    post {
        success {
            echo "✅ Deployment successful! Check above for your EKS URL."
        }
        failure {
            echo "❌ Deployment failed. Please check logs."
        }
    }
}
